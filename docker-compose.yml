services:
  ollama:
    build: ./ollama
    volumes:
      - ollama_data:/root/.ollama
    env_file: ".env"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  server:
    build:
      context: ./backend
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file: ".env"
    depends_on:
      weaviate-loader:
        condition: service_completed_successfully
      ollama:
        condition: service_started
      weaviate:
        condition: service_started
      alloy:
        condition: service_started
      langfuse:
        condition: service_started


  weaviate-loader:
    depends_on:
      - weaviate
    build: 
      context: ./weaviate_loader
    env_file:
      - .env

  ui:
    build:
      context: frontend
    ports:
      - "8070:8070"
    env_file: ".env"
    depends_on:
        - server

  weaviate:
    build: ./weaviate
    image: cr.weaviate.io/semitechnologies/weaviate:1.25.4
    depends_on:
      - text-embeddings-inference
      - prometheus
    ports:
    - "${WEAVIATE_PORT}:${WEAVIATE_PORT}"
    - "50051:50051"
    env_file:
      - .env
    volumes:
    - weaviate_data:/var/lib/weaviate
    #    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
      PROMETHEUS_MONITORING_ENABLED: 'true'

  text-embeddings-inference:
    ports:
      - ${TEI_PORT}:${TEI_PORT}
    volumes:
        - embed_data:/data
    image: ghcr.io/huggingface/text-embeddings-inference:turing-1.5
    env_file:
      - .env
    command: --model-id $MODEL --pooling mean --port ${TEI_PORT}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                  - gpu
  
  prometheus:
    build: ./Prometheus
    ports:
      - "9090:9090"
  
  grafana:
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    image: grafana/grafana-oss

  alloy:
    build: ./alloy
    ports:
      - "12345:12345"
    depends_on:
      - prometheus
  
  postgresql:
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langfuse"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: langfuse
      POSTGRES_PASSWORD: langfuse
      POSTGRES_DB: langfuse

  langfuse:
    container_name: langfuse
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      DATABASE_HOST: postgresql
      DATABASE_USERNAME: langfuse
      DATABASE_PASSWORD: langfuse
      DATABASE_NAME: langfuse
    image: "langfuse/langfuse:latest"
    depends_on:
      postgresql:
        condition: service_healthy


volumes:
  weaviate_data:
  ollama_data:
  embed_data:


